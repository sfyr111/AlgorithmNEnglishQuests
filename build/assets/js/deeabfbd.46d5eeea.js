"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[9910],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>y});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(r),f=o,y=s["".concat(p,".").concat(f)]||s[f]||m[f]||a;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7983:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(8168),o=(r(6540),r(5680));const a={},i="[238.\xa0Product of Array Except Self](https://leetcode.com/problems/product-of-array-except-self/)",l={unversionedId:"Array/Product of Array Except Self",id:"Array/Product of Array Except Self",title:"[238.\xa0Product of Array Except Self](https://leetcode.com/problems/product-of-array-except-self/)",description:"Problem",source:"@site/docs/Array/238.\xa0Product of Array Except Self.md",sourceDirName:"Array",slug:"/Array/Product of Array Except Self",permalink:"/AlgorithmNEnglishQuests/docs/Array/Product of Array Except Self",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Array/238.\xa0Product of Array Except Self.md",tags:[],version:"current",sidebarPosition:238,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"[209.\xa0Minimum Size Subarray Sum](https://leetcode.com/problems/minimum-size-subarray-sum/)",permalink:"/AlgorithmNEnglishQuests/docs/Array/Minimum Size Subarray Sum"},next:{title:"[283.\xa0Move Zeroes](https://leetcode.com/problems/move-zeroes/)",permalink:"/AlgorithmNEnglishQuests/docs/Array/Move Zeroes"}},p={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],u={toc:c},s="wrapper";function m(e){let{components:t,...r}=e;return(0,o.yg)(s,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"238product-of-array-except-self"},(0,o.yg)("a",{parentName:"h1",href:"https://leetcode.com/problems/product-of-array-except-self/"},"238.\xa0Product of Array Except Self")),(0,o.yg)("h2",{id:"problem"},"Problem"),(0,o.yg)("p",null,"Given an integer array\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"nums"),", return\xa0",(0,o.yg)("em",{parentName:"p"},"an array"),"\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"answer"),"\xa0",(0,o.yg)("em",{parentName:"p"},"such that"),"\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"answer[i]"),"\xa0",(0,o.yg)("em",{parentName:"p"},"is equal to the product of all the elements of"),"\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"nums"),"\xa0",(0,o.yg)("em",{parentName:"p"},"except"),"\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"nums[i]"),"."),(0,o.yg)("p",null,"The product of any prefix or suffix of\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"nums"),"\xa0is\xa0",(0,o.yg)("strong",{parentName:"p"},"guaranteed"),"\xa0to fit in a\xa0",(0,o.yg)("strong",{parentName:"p"},"32-bit"),"\xa0integer."),(0,o.yg)("p",null,"You must write an algorithm that runs in\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"O(n)"),"\xa0time and without using the division operation."),(0,o.yg)("h2",{id:"solution"},"Solution"),(0,o.yg)("p",null,"To solve the problem, we create an array of the same length as nums. We calculate the prefix product for each element and store it in the array. Then, we iterate backwards, multiplying each element by the postfix product, updating the array in-place. Finally, we return the array containing the products except for the self element."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"function productExceptSelf(nums: number[]): number[] {  \n    const ret = new Array(nums.length).fill(1);  // Initialize the result array\n    const len = nums.length;  \n  \n    let left = 1; // Initialize the prefix product as 1\n    for (let i = 0; i < len; i++) {  \n        ret[i] = left;  // Set the current index to the product of all numbers to the left\n        left *= nums[i];  // Update the prefix product\n    }  \n  \n    let right = 1; // Initialize the postfix product as 1\n    for (let j = len - 1; j >= 0; j--) {  \n        ret[j] *= right;  // Multiply the current index with the product of all numbers to the right\n        right *= nums[j];  // Update the postfix product\n    }  \n  \n    return ret;  \n};\n")))}m.isMDXComponent=!0}}]);