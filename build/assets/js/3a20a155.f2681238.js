"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[6909],{2097:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var i=n(8168),r=(n(6540),n(5680));const l={},a="[142.\xa0Linked List Cycle II](https://leetcode.com/problems/linked-list-cycle-ii/)",o={unversionedId:"linklist/Linked List Cycle II",id:"linklist/Linked List Cycle II",title:"[142.\xa0Linked List Cycle II](https://leetcode.com/problems/linked-list-cycle-ii/)",description:"Problem",source:"@site/docs/linklist/142.\xa0Linked List Cycle II.md",sourceDirName:"linklist",slug:"/linklist/Linked List Cycle II",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Linked List Cycle II",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linklist/142.\xa0Linked List Cycle II.md",tags:[],version:"current",sidebarPosition:142,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Linked List Cycle",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Linked List Cycle"},next:{title:"143. Reorder List",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Reorder List"}},s={},p=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,i.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"142linked-list-cycle-ii"},(0,r.yg)("a",{parentName:"h1",href:"https://leetcode.com/problems/linked-list-cycle-ii/"},"142.\xa0Linked List Cycle II")),(0,r.yg)("h2",{id:"problem"},"Problem"),(0,r.yg)("p",null,"Given the\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"head"),"\xa0of a linked list, return\xa0",(0,r.yg)("em",{parentName:"p"},"the node where the cycle begins. If there is no cycle, return"),"\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"null"),"."),(0,r.yg)("p",null,"There is a cycle in a linked list if there is some node in the list that can be\xa0reached\xa0again by\xa0continuously\xa0following the\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"next"),"\xa0pointer.\xa0Internally,\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"pos"),"\xa0is used to denote the index of the node that\xa0tail's\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"next"),"\xa0pointer is connected to (",(0,r.yg)("strong",{parentName:"p"},"0-indexed"),"). It is\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"-1"),"\xa0if there is no cycle.\xa0",(0,r.yg)("strong",{parentName:"p"},"Note that"),"\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"pos"),"\xa0",(0,r.yg)("strong",{parentName:"p"},"is not passed as a\xa0parameter"),"."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Do not modify"),"\xa0the linked list."),(0,r.yg)("h2",{id:"solution"},"Solution"),(0,r.yg)("p",null,"This problem can be solved in two steps. First, use ",(0,r.yg)("inlineCode",{parentName:"p"},"slow")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," pointers to find a meeting point within the cycle. The ",(0,r.yg)("inlineCode",{parentName:"p"},"slow")," pointer moves one step at a time, and the ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," pointer moves two steps. If a cycle exists, they will meet inside it. Then, considering the distance from the ",(0,r.yg)("inlineCode",{parentName:"p"},"head")," to the cycle's start as ",(0,r.yg)("inlineCode",{parentName:"p"},"m"),", the distance from the start to the meeting point as ",(0,r.yg)("inlineCode",{parentName:"p"},"x"),", and the cycle's length as ",(0,r.yg)("inlineCode",{parentName:"p"},"c"),", the remaining distance from the meeting point back to the start is ",(0,r.yg)("inlineCode",{parentName:"p"},"c-x"),". Since ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," travels ",(0,r.yg)("inlineCode",{parentName:"p"},"m + x + nc")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"slow")," travels ",(0,r.yg)("inlineCode",{parentName:"p"},"2(m+x)"),", equating these gives ",(0,r.yg)("inlineCode",{parentName:"p"},"m = c - x")," when ",(0,r.yg)("inlineCode",{parentName:"p"},"n")," equals 1. This means the distance from the ",(0,r.yg)("inlineCode",{parentName:"p"},"head")," to the cycle's start is the same as from the meeting point back to the start. Moving one pointer to the ",(0,r.yg)("inlineCode",{parentName:"p"},"head")," and advancing both at the same pace, they will meet at the cycle's beginning."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"function detectCycle(head: ListNode | null): ListNode | null {  \n    let slow = head;  \n    let fast = head;  \n  \n    while (fast !== null && fast.next !== null) {  \n        slow = slow.next;  \n        fast = fast.next.next;  \n        if (slow === fast) {  \n            break; // being found;  \n        }  \n    }  \n  \n    if (fast === null || fast.next === null) {  \n        return null; // not found;  \n    }  \n  \n    slow = head;  \n    while (slow !== fast) {  \n        slow = slow.next;  \n        fast = fast.next;  \n    }  \n  \n    return slow;  \n};\n")))}m.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>u});var i=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},y=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),y=r,u=d["".concat(s,".").concat(y)]||d[y]||m[y]||l;return n?i.createElement(u,a(a({ref:t},c),{},{components:n})):i.createElement(u,a({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=y;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,a[1]=o;for(var p=2;p<l;p++)a[p]=n[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);