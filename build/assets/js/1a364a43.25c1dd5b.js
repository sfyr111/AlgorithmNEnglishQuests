"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[2056],{4483:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>u,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(8168),r=(n(6540),n(5680));const o={},u="225.\xa0Implement\xa0Stack using Queues",i={unversionedId:"Stack/Implement\xa0Stack using Queues",id:"Stack/Implement\xa0Stack using Queues",title:"225.\xa0Implement\xa0Stack using Queues",description:"225.\xa0Implement\xa0Stack using Queues",source:"@site/docs/Stack/225.\xa0Implement\xa0Stack using Queues.md",sourceDirName:"Stack",slug:"/Stack/Implement\xa0Stack using Queues",permalink:"/docs/Stack/Implement\xa0Stack using Queues",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Stack/225.\xa0Implement\xa0Stack using Queues.md",tags:[],version:"current",sidebarPosition:225,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"155.\xa0Min Stack",permalink:"/docs/Stack/Min Stack"},next:{title:"739.\xa0Daily Temperatures",permalink:"/docs/Stack/Daily Temperatures"}},l={},s=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],p={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.yg)(m,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"225implementstack-using-queues"},"225.\xa0Implement\xa0Stack using Queues"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/implement-stack-using-queues/"},"225.\xa0Implement\xa0Stack using Queues")),(0,r.yg)("h2",{id:"problem"},"Problem"),(0,r.yg)("p",null,"Implement\xa0a last-in-first-out (LIFO) stack using only two queues. The\xa0implemented\xa0stack should support all the functions of a normal stack (",(0,r.yg)("inlineCode",{parentName:"p"},"push"),",\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"top"),",\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"pop"),", and\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"empty"),")."),(0,r.yg)("p",null,"Implement\xa0the\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"MyStack"),"\xa0class:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"void push(int x)"),"\xa0Pushes element x to the top of the stack."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"int pop()"),"\xa0Removes the element on the top of the stack and returns it."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"int top()"),"\xa0Returns the element on the top of the stack."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"boolean empty()"),"\xa0Returns\xa0",(0,r.yg)("inlineCode",{parentName:"li"},"true"),"\xa0if the stack is empty,\xa0",(0,r.yg)("inlineCode",{parentName:"li"},"false"),"\xa0otherwise.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Notes:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"You must use\xa0",(0,r.yg)("strong",{parentName:"li"},"only"),"\xa0standard operations of a queue, which means that only\xa0",(0,r.yg)("inlineCode",{parentName:"li"},"push to back"),",\xa0",(0,r.yg)("inlineCode",{parentName:"li"},"peek/pop from front"),",\xa0",(0,r.yg)("inlineCode",{parentName:"li"},"size"),"\xa0and\xa0",(0,r.yg)("inlineCode",{parentName:"li"},"is empty"),"\xa0operations are valid."),(0,r.yg)("li",{parentName:"ul"},"Depending on your language, the queue may not be supported natively. You may\xa0simulate\xa0a queue using a list or deque (double-ended queue) as long as you use only a queue's standard operations.")),(0,r.yg)("h2",{id:"solution"},"Solution"),(0,r.yg)("p",null,"To implement a stack using a queue, the push, empty, and top methods can be implemented simply.\nThe push method simply adds an element to the end of the queue.\nThe empty method checks if the queue is empty.\nThe top method retrieves the last element added to the queue.\nTo implement a pop method on a queue, remove all values except the last one, then add the removed values back to the queue. The final pop operation works like a stack pop operation."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"class MyStack {  \n    queue: number[];  \n  \n    constructor() {  \n       this.queue = [];  \n    }  \n  \n    push(x: number): void {  \n        this.queue.push(x);  \n    }  \n  \n    pop(): number {  \n        for (let i = 0; i < this.queue.length - 1; i++) {  \n            const pop = this.queue.shift();  \n            this.queue.push(pop);  \n        }        return this.queue.shift();  \n    }  \n  \n    top(): number {  \n        return this.queue[this.queue.length - 1];  \n    }  \n  \n    empty(): boolean {  \n        return this.queue.length === 0;  \n    }  \n}\n\n")))}c.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(n),y=r,d=m["".concat(l,".").concat(y)]||m[y]||c[y]||o;return n?a.createElement(d,u(u({ref:t},p),{},{components:n})):a.createElement(d,u({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,u=new Array(o);u[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:r,u[1]=i;for(var s=2;s<o;s++)u[s]=n[s];return a.createElement.apply(null,u)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);