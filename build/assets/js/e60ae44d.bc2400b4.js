"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[1420],{5384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var i=n(8168),r=(n(6540),n(5680));const l={},o=void 0,a={unversionedId:"linklist/Linked List Cycle",id:"linklist/Linked List Cycle",title:"Linked List Cycle",description:"141.\xa0Linked List Cycle](https://leetcode.com/problems/linked-list-cycle/)",source:"@site/docs/linklist/141.\xa0Linked List Cycle.md",sourceDirName:"linklist",slug:"/linklist/Linked List Cycle",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Linked List Cycle",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linklist/141.\xa0Linked List Cycle.md",tags:[],version:"current",sidebarPosition:141,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"138.\xa0Copy List with Random Pointer",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Copy List with Random Pointer"},next:{title:"[142.\xa0Linked List Cycle II](https://leetcode.com/problems/linked-list-cycle-ii/)",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Linked List Cycle II"}},s={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,i.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"141.\xa0Linked List Cycle](",(0,r.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/linked-list-cycle/"},"https://leetcode.com/problems/linked-list-cycle/"),")"),(0,r.yg)("h2",{id:"problem"},"Problem"),(0,r.yg)("p",null,"Given\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"head"),", the head of a linked list,\xa0determine\xa0if the linked list has a cycle in it."),(0,r.yg)("p",null,"There is a cycle in a linked list if there is some node in the list that can be\xa0reached\xa0again by continuously following the\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"next"),"\xa0pointer.\xa0Internally,\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"pos"),"\xa0is used to denote the index of the node that\xa0tail's\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"next"),"\xa0pointer is connected to.\xa0",(0,r.yg)("strong",{parentName:"p"},"Note that\xa0",(0,r.yg)("inlineCode",{parentName:"strong"},"pos"),"\xa0is not passed as a parameter"),"."),(0,r.yg)("p",null,"Return\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"true"),"\xa0",(0,r.yg)("em",{parentName:"p"},"if there is a cycle in the linked list"),".\xa0Otherwise, return\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"false"),"."),(0,r.yg)("h2",{id:"solution"},"Solution"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"function hasCycle(head: ListNode | null): boolean {  \n  if (head === null || head.next === null) {  \n    return false;  \n  }  \n  \n  let slow = head;  \n  let fast = head.next;  \n  \n  while (slow !== fast) {  \n    if (fast === null || fast.next === null) {  \n      return false;  \n    }    slow = slow.next;  \n    fast = fast.next.next;  \n  }  \n  \n  return true;  \n};\n")),(0,r.yg)("p",null,"In this problem, we apply the two-pointer technique to detect a cycle in a linked list. We initialize two pointers: ",(0,r.yg)("inlineCode",{parentName:"p"},"slow")," moves one step at a time, and ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," moves two steps at a time. As long as ",(0,r.yg)("inlineCode",{parentName:"p"},"slow")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," have not met and ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," and its subsequent node ",(0,r.yg)("inlineCode",{parentName:"p"},"fast.next")," are not null, we continue to iterate. A null ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"fast.next")," signifies that we've reached the end of the list without encountering a cycle. If ",(0,r.yg)("inlineCode",{parentName:"p"},"fast")," overtakes ",(0,r.yg)("inlineCode",{parentName:"p"},"slow")," within the loop, it indicates that the list is cyclic."))}u.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var i=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},y=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(n),y=r,m=d["".concat(s,".").concat(y)]||d[y]||u[y]||l;return n?i.createElement(m,o(o({ref:t},p),{},{components:n})):i.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=y;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[d]="string"==typeof e?e:r,o[1]=a;for(var c=2;c<l;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);