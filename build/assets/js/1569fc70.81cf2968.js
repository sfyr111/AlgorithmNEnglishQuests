"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[3430],{4538:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var t=r(8168),a=(r(6540),r(5680));const i={},o="139. Word Break",s={unversionedId:"dynamic/Word Break",id:"dynamic/Word Break",title:"139. Word Break",description:"Problem",source:"@site/docs/dynamic/139. Word Break.md",sourceDirName:"dynamic",slug:"/dynamic/Word Break",permalink:"/docs/dynamic/Word Break",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dynamic/139. Word Break.md",tags:[],version:"current",sidebarPosition:139,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"91. Decode Ways",permalink:"/docs/dynamic/Decode Ways"},next:{title:"152. Maximum Product Subarray",permalink:"/docs/dynamic/Maximum Product Subarray"}},p={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],d={toc:c},l="wrapper";function u(e){let{components:n,...r}=e;return(0,a.yg)(l,(0,t.A)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"139-word-break"},"139. Word Break"),(0,a.yg)("h1",{id:"139-word-break-1"},(0,a.yg)("a",{parentName:"h1",href:"https://leetcode.com/problems/word-break/"},"139. Word Break")),(0,a.yg)("h2",{id:"problem"},"Problem"),(0,a.yg)("p",null,"Given a string\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"s"),"\xa0and a dictionary of strings\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"wordDict"),", return\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"true"),"\xa0if\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"s"),"\xa0can be segmented into a space-separated\xa0sequence\xa0of one or more dictionary words."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Note"),"\xa0that the same word in the dictionary may be reused multiple times in the segmentation."),(0,a.yg)("h2",{id:"solution"},"Solution"),(0,a.yg)("p",null,"To solve the 'Word Break' problem, we use dynamic programming. We create a ",(0,a.yg)("inlineCode",{parentName:"p"},"dp")," array where each element, ",(0,a.yg)("inlineCode",{parentName:"p"},"dp[i]"),", indicates if the substring up to index ",(0,a.yg)("inlineCode",{parentName:"p"},"i")," can be segmented into words from the dictionary. We start with ",(0,a.yg)("inlineCode",{parentName:"p"},"dp[0] = true")," as the base case because an empty string is always segmentable."),(0,a.yg)("p",null,"Then, we iterate through each position in the string. For each position ",(0,a.yg)("inlineCode",{parentName:"p"},"i"),", we check back to earlier positions ",(0,a.yg)("inlineCode",{parentName:"p"},"j")," to see if the substring from ",(0,a.yg)("inlineCode",{parentName:"p"},"j")," to ",(0,a.yg)("inlineCode",{parentName:"p"},"i - 1")," matches a word in the dictionary and if ",(0,a.yg)("inlineCode",{parentName:"p"},"dp[j]")," is true. If such a ",(0,a.yg)("inlineCode",{parentName:"p"},"j")," exists, we set ",(0,a.yg)("inlineCode",{parentName:"p"},"dp[i] = true"),". This process continues until the end of the string. If ",(0,a.yg)("inlineCode",{parentName:"p"},"dp[n]")," (where ",(0,a.yg)("inlineCode",{parentName:"p"},"n")," is the length of the string) is true, it means the entire string can be segmented into words from the dictionary."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"function wordBreak(s: string, wordDict: string[]): boolean {\n    const n = s.length;\n    const dp = new Array(n + 1).fill(false);\n    dp[0] = true;\n    \n    for (let i = 1; i <= n; i++) {\n        for (let j = 0; j < i; j++) {\n            if(dp[j] && wordDict.includes(s.substring(j, i))) {\n                dp[i] = true;\n                break;\n            }\n        }\n    }\n    \n    return dp[n];\n};\n")))}u.isMDXComponent=!0},5680:(e,n,r)=>{r.d(n,{xA:()=>d,yg:()=>y});var t=r(6540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),l=c(r),m=a,y=l["".concat(p,".").concat(m)]||l[m]||u[m]||i;return r?t.createElement(y,o(o({ref:n},d),{},{components:r})):t.createElement(y,o({ref:n},d))}));function y(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[l]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);