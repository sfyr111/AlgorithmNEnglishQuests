"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[9815],{2702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var i=n(8168),r=(n(6540),n(5680));const o={},s="287.\xa0Find the Duplicate Number]",l={unversionedId:"linklist/Find the Duplicate Number",id:"linklist/Find the Duplicate Number",title:"287.\xa0Find the Duplicate Number]",description:"287.\xa0Find the Duplicate Number",source:"@site/docs/linklist/287.\xa0Find the Duplicate Number.md",sourceDirName:"linklist",slug:"/linklist/Find the Duplicate Number",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Find the Duplicate Number",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linklist/287.\xa0Find the Duplicate Number.md",tags:[],version:"current",sidebarPosition:287,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Palindrome Linked List",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Palindrome Linked List"},next:{title:"[876.\xa0Middle of the Linked List](https://leetcode.com/problems/middle-of-the-linked-list/)",permalink:"/AlgorithmNEnglishQuests/docs/linklist/Middle of the Linked List"}},a={},u=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],p={toc:u},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.yg)(m,(0,i.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"287find-the-duplicate-number"},"287.\xa0Find the Duplicate Number]"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/find-the-duplicate-number/"},"287.\xa0Find the Duplicate Number")),(0,r.yg)("h2",{id:"problem"},"Problem"),(0,r.yg)("p",null,"Given an array of integers\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"nums"),"\xa0containing\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"n + 1"),"\xa0integers where each integer is in the range\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"[1, n]"),"\xa0inclusive."),(0,r.yg)("p",null,"There is only\xa0",(0,r.yg)("strong",{parentName:"p"},"one repeated number"),"\xa0in\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"nums"),", return\xa0",(0,r.yg)("em",{parentName:"p"},"this\xa0repeated\xa0number"),"."),(0,r.yg)("p",null,"You must solve the problem\xa0",(0,r.yg)("strong",{parentName:"p"},"without"),"\xa0modifying the array\xa0",(0,r.yg)("inlineCode",{parentName:"p"},"nums"),"\xa0and uses only constant\xa0extra\xa0space."),(0,r.yg)("h2",{id:"solution"},"Solution"),(0,r.yg)("p",null,"In nums, each number points to the following index. If nums","[0]"," is 3, it means to nums","[3]",". This makes it like a list where each element connects to another. Because numbers repeat, it must make a loop in the list. We find this loop to find a duplicate."),(0,r.yg)("p",null,"For Floyd's algorithm, the first step is to set slow and fast. Slow is like nums","[0]",", the first element in the array. fast is nums[nums","[0]","]. The slow move is one step each time; the fast move is two steps. They move until they meet. This meeting is inside loop."),(0,r.yg)("p",null,"After the meeting, the critical part is finding the start of the loop. We put a new pointer begin at the start, which means begin is 0. We move the slow and begin pointer one step each time. When they meet, this is the start of the loop. This point is a duplicate number."),(0,r.yg)("p",null,"The reason we do this is math. Distance from start to loop start and from first meet to loop start is the same. So, when begin and slow meet, it must be the start of the loop."),(0,r.yg)("p",null,"This way, we use nums as a list to find the loop for duplicates. It is fast and does not need extra space."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-typescript"},"function findDuplicate(nums: number[]): number {  \n  let slow = nums[0];  \n  let fast = nums[nums[0]];  \n  \n  while (slow !== fast) {  \n    slow = nums[slow];  \n    fast = nums[nums[fast]];  \n  }  \n  \n  let begin = 0;  \n  \n  while (begin !== slow) {  \n    begin = nums[begin];  \n    slow = nums[slow];  \n  }  \n  \n  return begin;  \n};\n")))}c.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var i=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=i.createContext({}),u=function(e){var t=i.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return i.createElement(a.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(a,".").concat(d)]||m[d]||c[d]||o;return n?i.createElement(h,s(s({ref:t},p),{},{components:n})):i.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[m]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<o;u++)s[u]=n[u];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);