"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[508],{3732:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(8168),o=(n(6540),n(5680));const i={},a="121.\xa0Best Time to Buy and Sell Stock](https://leetcode.com/problems/best-time-to-buy-and-sell-stock/)",l={unversionedId:"sliding window/Best Time to Buy and Sell Stock",id:"sliding window/Best Time to Buy and Sell Stock",title:"121.\xa0Best Time to Buy and Sell Stock](https://leetcode.com/problems/best-time-to-buy-and-sell-stock/)",description:"Problem",source:"@site/docs/sliding window/121.\xa0Best Time to Buy and Sell Stock.md",sourceDirName:"sliding window",slug:"/sliding window/Best Time to Buy and Sell Stock",permalink:"/docs/sliding window/Best Time to Buy and Sell Stock",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sliding window/121.\xa0Best Time to Buy and Sell Stock.md",tags:[],version:"current",sidebarPosition:121,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3.\xa0Longest Substring Without Repeating Characters",permalink:"/docs/sliding window/Longest Substring Without Repeating Characters"},next:{title:"424.\xa0Longest Repeating\xa0Character\xa0Replacement",permalink:"/docs/sliding window/Longest Repeating\xa0Character\xa0Replacement"}},s={},p=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"121best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock"},"121.\xa0Best Time to Buy and Sell Stock](",(0,o.yg)("a",{parentName:"h1",href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"},"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/"),")"),(0,o.yg)("h2",{id:"problem"},"Problem"),(0,o.yg)("p",null,"You are given an array\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"prices"),"\xa0where\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"prices[i]"),"\xa0is the price of a given stock on the\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"ith"),"\xa0day."),(0,o.yg)("p",null,"You want to maximize your\xa0profit\xa0by choosing a\xa0",(0,o.yg)("strong",{parentName:"p"},"single day"),"\xa0to buy one stock and choosing a\xa0",(0,o.yg)("strong",{parentName:"p"},"different day in the future"),"\xa0to sell that stock."),(0,o.yg)("p",null,"Return\xa0",(0,o.yg)("em",{parentName:"p"},"the maximum\xa0profit\xa0you can achieve from this transaction"),". If you cannot achieve any\xa0profit, return\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"0"),"."),(0,o.yg)("h2",{id:"solution"},"Solution"),(0,o.yg)("p",null,"To solve this, we use a sliding window with two pointers, ",(0,o.yg)("inlineCode",{parentName:"p"},"left")," for buying and ",(0,o.yg)("inlineCode",{parentName:"p"},"right")," for selling. We move the ",(0,o.yg)("inlineCode",{parentName:"p"},"right")," pointer to compare prices and calculate profit. If a profit is found, we update ",(0,o.yg)("inlineCode",{parentName:"p"},"maxProfit"),". If the ",(0,o.yg)("inlineCode",{parentName:"p"},"right")," pointer finds a lower price, indicating a better buying opportunity, we move the ",(0,o.yg)("inlineCode",{parentName:"p"},"left")," pointer to the ",(0,o.yg)("inlineCode",{parentName:"p"},"right"),". We continue sliding ",(0,o.yg)("inlineCode",{parentName:"p"},"right")," and updating ",(0,o.yg)("inlineCode",{parentName:"p"},"maxProfit")," until the end."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"function maxProfit(prices: number[]): number {  \n  let left = 0; // buy  \n  let right = 1; // sell  \n  let maxProfit = 0;  \n  \n  while (right < prices.length) {  \n    if (prices[left] < prices[right]) {  \n      const profit = prices[right] - prices[left]; // calculate the profit  \n      maxProfit = Math.max(maxProfit, profit); // update max profit  \n    } else {  \n      left = right; // find a smaller buy pointer, slide the left window  \n    }  \n    right += 1; // slide the right window  \n  }  \n  \n  return maxProfit;  \n};\n")))}d.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);