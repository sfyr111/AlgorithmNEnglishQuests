"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[2932],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>h});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7239:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(8168),o=(n(6540),n(5680));const a={},i="62. Unique Paths",l={unversionedId:"dynamic/Unique Paths",id:"dynamic/Unique Paths",title:"62. Unique Paths",description:"62. Unique Paths",source:"@site/docs/dynamic/62. Unique Paths.md",sourceDirName:"dynamic",slug:"/dynamic/Unique Paths",permalink:"/docs/dynamic/Unique Paths",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dynamic/62. Unique Paths.md",tags:[],version:"current",sidebarPosition:62,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"5. Longest Palindromic Substring",permalink:"/docs/dynamic/Longest Palindromic Substring & 647. Palindromic Substrings"},next:{title:"70. Climbing Stairs",permalink:"/docs/dynamic/Climbing Stairs"}},s={},p=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2},{value:"Be better",id:"be-better",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"62-unique-paths"},"62. Unique Paths"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/unique-paths/"},"62. Unique Paths")),(0,o.yg)("h2",{id:"problem"},"Problem"),(0,o.yg)("p",null,"There is a robot\xa0on\xa0an\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"m x n"),"\xa0grid. The robot is initially located at the\xa0",(0,o.yg)("strong",{parentName:"p"},"top-left\xa0corner"),"\xa0(i.e.,\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"grid[0][0]"),"). The robot tries to move to the\xa0",(0,o.yg)("strong",{parentName:"p"},"bottom-right\xa0corner"),"\xa0(i.e.,\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"grid[m - 1][n - 1]"),"). The robot can only move\xa0either\xa0down or right at any point in time."),(0,o.yg)("p",null,"Given the two integers\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"m"),"\xa0and\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"n"),", return\xa0",(0,o.yg)("em",{parentName:"p"},"the number of possible\xa0unique\xa0paths that the robot can take to\xa0reach\xa0the bottom-right\xa0corner"),"."),(0,o.yg)("p",null,"The test\xa0cases\xa0are generated so that the answer will be less than or equal to\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"2 * 109"),"."),(0,o.yg)("h2",{id:"solution"},"Solution"),(0,o.yg)("p",null,"Dynamic programming can be used to solve the problem. Only the very top left to top right and left bottom paths can reach each position in the grid. For the rest of the positions, we add the top position to the left position. To implement this, we create a grid with a nested array and traverse it. If the current position is at the very top row or very left column, we put number one there. Otherwise, we calculate the sum of the left and top positions."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"function uniquePaths(m: number, n: number): number {\n    const grid = new Array(m).fill(new Array(n));\n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            if (i === 0 || j === 0) {\n                grid[i][j] = 1;\n            } else {\n                grid[i][j] = grid[i][j - 1] + grid[i - 1][j];\n            }\n        }\n    }\n    return grid[m - 1][n - 1];\n};\n")),(0,o.yg)("h2",{id:"be-better"},"Be better"),(0,o.yg)("p",null,"We solve the 'Unique Paths' problem with dynamic programming. The grid's top row and left column have only one way to reach each spot. For other spots, we add the number of ways to the spot\xa0above and to the left. We create a grid as a two-dimensional array. We fill the first row and column with ones because there's just one path to those. For the rest, we add the top and left numbers at each spot to find all unique paths."))}m.isMDXComponent=!0}}]);