"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[109],{4612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(8168),i=(n(6540),n(5680));const o={},l="[203.\xa0Remove Linked List Elements](https://leetcode.com/problems/remove-linked-list-elements/)",s={unversionedId:"linklist/Remove Linked List Elements",id:"linklist/Remove Linked List Elements",title:"[203.\xa0Remove Linked List Elements](https://leetcode.com/problems/remove-linked-list-elements/)",description:"Problem",source:"@site/docs/linklist/203.\xa0Remove Linked List Elements.md",sourceDirName:"linklist",slug:"/linklist/Remove Linked List Elements",permalink:"/docs/linklist/Remove Linked List Elements",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/linklist/203.\xa0Remove Linked List Elements.md",tags:[],version:"current",sidebarPosition:203,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intersection of Two Linked Lists",permalink:"/docs/linklist/Intersection of Two Linked Lists"},next:{title:"[206.\xa0Reverse Linked List](https://leetcode.com/problems/reverse-linked-list/)",permalink:"/docs/linklist/Reverse Linked List"}},a={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],m={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,i.yg)(d,(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"203remove-linked-list-elements"},(0,i.yg)("a",{parentName:"h1",href:"https://leetcode.com/problems/remove-linked-list-elements/"},"203.\xa0Remove Linked List Elements")),(0,i.yg)("h2",{id:"problem"},"Problem"),(0,i.yg)("p",null,"Given the\xa0",(0,i.yg)("inlineCode",{parentName:"p"},"head"),"\xa0of a linked list and an integer\xa0",(0,i.yg)("inlineCode",{parentName:"p"},"val"),", remove all the nodes of the linked list that has\xa0",(0,i.yg)("inlineCode",{parentName:"p"},"Node.val == val"),", and return\xa0",(0,i.yg)("em",{parentName:"p"},"the new head"),"."),(0,i.yg)("h2",{id:"solution"},"Solution"),(0,i.yg)("p",null,"We can create a dummy node and set it ",(0,i.yg)("inlineCode",{parentName:"p"},"next")," to the head of the linked list. As we traverse the linked list, we check the value of the next node. If its value matches the target value, we update the ",(0,i.yg)("inlineCode",{parentName:"p"},"next")," of the current node to skip it. Otherwise, we just move the current node forward."),(0,i.yg)("p",null,"Why don't we use just ",(0,i.yg)("inlineCode",{parentName:"p"},"current")," for the loop? Because if we do, removing the current node becomes tricky, and need to always ensure the next value exits. Using a dummy node and checking ",(0,i.yg)("inlineCode",{parentName:"p"},"current.next")," simplifies the process."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"function removeElements(head: ListNode | null, val: number): ListNode | null {  \n    const dummy = new ListNode(0);  \n    dummy.next = head;  \n    let current = dummy;  \n      \n    while (current.next) {  \n        if (current.next.val === val) {  \n            current.next = current.next.next;  \n        } else {  \n            current = current.next;  \n        }  \n  \n    }  \n  \n    return dummy.next;  \n};\n")))}u.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>y});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=i,y=d["".concat(a,".").concat(p)]||d[p]||u[p]||o;return n?r.createElement(y,l(l({ref:t},m),{},{components:n})):r.createElement(y,l({ref:t},m))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=p;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s[d]="string"==typeof e?e:i,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);