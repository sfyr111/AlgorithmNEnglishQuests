"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[5454],{863:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(8168),a=(r(6540),r(5680));const o={},i="100.\xa0Same Tree",l={unversionedId:"trees/Same Tree",id:"trees/Same Tree",title:"100.\xa0Same Tree",description:"100.\xa0Same Tree",source:"@site/docs/trees/100.\xa0Same Tree.md",sourceDirName:"trees",slug:"/trees/Same Tree",permalink:"/AlgorithmNEnglishQuests/docs/trees/Same Tree",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/trees/100.\xa0Same Tree.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"98. Validate Binary Search Tree",permalink:"/AlgorithmNEnglishQuests/docs/trees/Validate Binary Search Tree"},next:{title:"101. Symmetric Tree",permalink:"/AlgorithmNEnglishQuests/docs/trees/Symmetric Tree"}},s={},u=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],c={toc:u},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.yg)(p,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"100same-tree"},"100.\xa0Same Tree"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/same-tree/"},"100.\xa0Same Tree")),(0,a.yg)("h2",{id:"problem"},"Problem"),(0,a.yg)("p",null,"Given the roots of two binary trees\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"p"),"\xa0and\xa0",(0,a.yg)("inlineCode",{parentName:"p"},"q"),", write a function to check if they are the same or not."),(0,a.yg)("p",null,"Two binary trees are considered the same if they are structurally\xa0identical, and the nodes have the same value."),(0,a.yg)("h2",{id:"solution"},"Solution"),(0,a.yg)("p",null,"To check if two binary trees are the same. This means every corresponding node in the two trees must have the same value.\nWe compare nodes from both trees one by one.\nIf both nodes are null, it means we've reached the end of both trees at the same time, so they are the same up to this point, and we return true.\nIf one node is null and the other is not, or if the values in the nodes are not equal, then the trees are not the same, and we return false.\nIf the values are equal, we recursively check the left and right subtrees.\nThe function returns true only if all corresponding nodes in the two trees are the same."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-typescript"},"function isSameTree(p: TreeNode | null, q: TreeNode | null): boolean {  \n  if (p === null && q === null) {  \n    return true;  \n  }  \n  if ((p === null || q === null)  \n     || p.val !== q.val) {  \n    return false;  \n  }  \n  \n  return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);  \n};\n")))}m.isMDXComponent=!0},5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>h});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);