"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[9918],{5218:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=t(8168),o=(t(6540),t(5680));const a={},i="108. Convert Sorted Array to Binary Search Tree",l={unversionedId:"trees/Convert Sorted Array to Binary Search Tree",id:"trees/Convert Sorted Array to Binary Search Tree",title:"108. Convert Sorted Array to Binary Search Tree",description:"108. Convert Sorted Array to Binary Search Tree",source:"@site/docs/trees/108. Convert Sorted Array to Binary Search Tree.md",sourceDirName:"trees",slug:"/trees/Convert Sorted Array to Binary Search Tree",permalink:"/AlgorithmNEnglishQuests/docs/trees/Convert Sorted Array to Binary Search Tree",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/trees/108. Convert Sorted Array to Binary Search Tree.md",tags:[],version:"current",sidebarPosition:108,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"105.\xa0Construct\xa0Binary Tree from\xa0Preorder\xa0and Inorder Traversal",permalink:"/AlgorithmNEnglishQuests/docs/trees/Construct\xa0Binary Tree from\xa0Preorder\xa0and Inorder Traversal"},next:{title:"Balanced Binary Tree",permalink:"/AlgorithmNEnglishQuests/docs/trees/Balanced Binary Tree"}},s={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],u={toc:c},d="wrapper";function p(e){let{components:r,...t}=e;return(0,o.yg)(d,(0,n.A)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"108-convert-sorted-array-to-binary-search-tree"},"108. Convert Sorted Array to Binary Search Tree"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/"},"108. Convert Sorted Array to Binary Search Tree")),(0,o.yg)("h2",{id:"problem"},"Problem"),(0,o.yg)("p",null,"Given an integer array\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"nums"),"\xa0where the elements are sorted in\xa0",(0,o.yg)("strong",{parentName:"p"},"ascending\xa0order"),",\xa0convert\xa0",(0,o.yg)("em",{parentName:"p"},"it to a"),"\xa0 ",(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("em",{parentName:"strong"},"height-balanced"))," ",(0,o.yg)("em",{parentName:"p"},"binary search tree"),"."),(0,o.yg)("h2",{id:"solution"},"Solution"),(0,o.yg)("p",null,"To solve it, we use recursion:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Base Case"),": If the left index is more than the right index in the array, we return null because there's no more to divide."),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Find Middle Element"),": We calculate the middle of the current array segment. This middle element becomes the root node of the BST or a subtree."),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Recursive Calls"),": We recursively create the left subtree using the array part left of the middle element and the right subtree using the array part right of the middle element."),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("strong",{parentName:"li"},"Return Tree"),": The recursion builds the tree, returning the root of the balanced BST. We need to provide a more balanced tree towards the right middle element in the section.")),(0,o.yg)("p",null,"The key is always to pick the middle element as the root to ensure the tree stays balanced."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-typescript"},"function sortedArrayToBST(nums: number[]): TreeNode | null {  \n  \n  function help(left: number, right: number) {  \n    if (left > right) {  \n      return null;  \n    }  \n    const mid = (left + right + 1) / 2 | 0;  \n  \n    const root = new TreeNode(nums[mid]);  \n  \n    root.left = help(left, mid - 1);  \n    root.right = help(mid + 1, right);  \n  \n    return root;  \n  }  \n  \n  return help(0, nums.length - 1);  \n};\n")))}p.isMDXComponent=!0},5680:(e,r,t)=>{t.d(r,{xA:()=>u,yg:()=>m});var n=t(6540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),y=o,m=d["".concat(s,".").concat(y)]||d[y]||p[y]||a;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=y;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"}}]);