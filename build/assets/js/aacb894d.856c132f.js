"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[1607],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>f});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),y=o,f=c["".concat(l,".").concat(y)]||c[y]||m[y]||a;return r?n.createElement(f,s(s({ref:t},p),{},{components:r})):n.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=y;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6245:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=r(8168),o=(r(6540),r(5680));const a={},s="[347.\xa0Top K\xa0Frequent\xa0Elements](https://leetcode.com/problems/top-k-frequent-elements/)",i={unversionedId:"Array/Top K\xa0Frequent\xa0Elements",id:"Array/Top K\xa0Frequent\xa0Elements",title:"[347.\xa0Top K\xa0Frequent\xa0Elements](https://leetcode.com/problems/top-k-frequent-elements/)",description:"Problem",source:"@site/docs/Array/347.\xa0Top K\xa0Frequent\xa0Elements.md",sourceDirName:"Array",slug:"/Array/Top K\xa0Frequent\xa0Elements",permalink:"/AlgorithmNEnglishQuests/docs/Array/Top K\xa0Frequent\xa0Elements",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Array/347.\xa0Top K\xa0Frequent\xa0Elements.md",tags:[],version:"current",sidebarPosition:347,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"[344.\xa0Reverse String](https://leetcode.com/problems/reverse-string/)",permalink:"/AlgorithmNEnglishQuests/docs/Array/Reverse String"},next:{title:"Intersection of Two Arrays",permalink:"/AlgorithmNEnglishQuests/docs/Array/Intersection of Two Arrays"}},l={},u=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...r}=e;return(0,o.yg)(c,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"347top-kfrequentelements"},(0,o.yg)("a",{parentName:"h1",href:"https://leetcode.com/problems/top-k-frequent-elements/"},"347.\xa0Top K\xa0Frequent\xa0Elements")),(0,o.yg)("h2",{id:"problem"},"Problem"),(0,o.yg)("p",null,"Given an integer array\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"nums"),"\xa0and an integer\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"k"),", return\xa0",(0,o.yg)("em",{parentName:"p"},"the"),"\xa0",(0,o.yg)("inlineCode",{parentName:"p"},"k"),"\xa0",(0,o.yg)("em",{parentName:"p"},"most\xa0frequent\xa0elements"),". You may return the answer in\xa0",(0,o.yg)("strong",{parentName:"p"},"any order"),"."),(0,o.yg)("h2",{id:"solution"},"Solution"),(0,o.yg)("p",null,"To solve this problem, we first use a hash table to count how often each number appears in the ",(0,o.yg)("inlineCode",{parentName:"p"},"nums")," array, with each number as a key and its occurrence count as the value. Then, we sort these keys based on their counts in descending order. Finally, we return the first ",(0,o.yg)("inlineCode",{parentName:"p"},"k")," elements from this sorted list. This two-step approach efficiently identifies the top ",(0,o.yg)("inlineCode",{parentName:"p"},"k")," frequent elements in the array."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"function topKFrequent(nums: number[], k: number): number[] {  \n    const freqMap = {};  \n  \n    for (const num of nums) {  \n        freqMap[num] = (freqMap[num] || 0) + 1;  \n    }  \n  \n    const uniqueNums = Object.keys(freqMap).map(Number);  \n  \n    uniqueNums.sort((a, b) => freqMap[b] - freqMap[a]);  \n  \n    return uniqueNums.slice(0, k);  \n};\n")))}m.isMDXComponent=!0}}]);