"use strict";(self.webpackChunkalgorithm_n_english_quests=self.webpackChunkalgorithm_n_english_quests||[]).push([[9220],{1952:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(8168),i=(n(6540),n(5680));const a={},o="70. Climbing Stairs",l={unversionedId:"dynamic/Climbing Stairs",id:"dynamic/Climbing Stairs",title:"70. Climbing Stairs",description:"70. Climbing Stairs",source:"@site/docs/dynamic/70. Climbing Stairs.md",sourceDirName:"dynamic",slug:"/dynamic/Climbing Stairs",permalink:"/AlgorithmNEnglishQuests/docs/dynamic/Climbing Stairs",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/dynamic/70. Climbing Stairs.md",tags:[],version:"current",sidebarPosition:70,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"62. Unique Paths",permalink:"/AlgorithmNEnglishQuests/docs/dynamic/Unique Paths"},next:{title:"91. Decode Ways",permalink:"/AlgorithmNEnglishQuests/docs/dynamic/Decode Ways"}},s={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...a}=e;return(0,i.yg)(m,(0,r.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"70-climbing-stairs"},"70. Climbing Stairs"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/climbing-stairs/"},"70. Climbing Stairs")),(0,i.yg)("h2",{id:"problem"},"Problem"),(0,i.yg)("p",null,"You are climbing a staircase. It takes\xa0",(0,i.yg)("inlineCode",{parentName:"p"},"n"),"\xa0steps to reach the top.\nEach time you can either climb\xa0",(0,i.yg)("inlineCode",{parentName:"p"},"1"),"\xa0or\xa0",(0,i.yg)("inlineCode",{parentName:"p"},"2"),"\xa0steps. In how many\xa0distinct\xa0ways can you climb to the top?"),(0,i.yg)("h2",{id:"solution"},"Solution"),(0,i.yg)("p",null,"The 'Climbing Stairs' problem can be solved using a bottom-up approach with two variables, 'one' and 'two'. Initially, both variables are set to 1 because there's one way to climb. For n greater than 2. Using a loop, for each step starting from the bottom, the 'one' variable is updated to be the sum of 'one' and 'two'. The 'two' variable is then set to the old value of 'one'. This process continues until all steps are calculated. The final value of 'one' will give the total number of ways to reach the top of 'n' stairs."),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"climb-stairs",src:n(8025).A,width:"3962",height:"2308"})),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-typescript"},"function climbStairs(n: number): number {\n    let one = 1;\n    let two = 1;\n    \n    for (let i = 0; i < n - 1; i++) {\n        const temp = one;\n        one = one + two;\n        two = temp;\n    }\n\n    return one;\n};\n")))}u.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>g});var r=n(6540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),b=i,g=m["".concat(s,".").concat(b)]||m[b]||u[b]||a;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},8025:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/climb-stairs-c4bb82e3f9e88156831ce6dcb571c629.png"}}]);